generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Sale {
  id          Int      @id @default(autoincrement())
  description String?
  amount      Decimal  @db.Money
  size        Int
  quantity    Decimal  @db.Money
  rate        Decimal  @db.Money
  customer    Customer @relation(fields: [customerId], references: [id])
  customerId  Int
  date        DateTime @db.Timestamptz(3)
  createdAt   DateTime @default(now()) @db.Timestamptz(3)
  updatedAt   DateTime @updatedAt() @db.Timestamptz(3)

  @@map("sales")
}

model Customer {
  id          Int       @id @default(autoincrement())
  name        String
  address     String?
  phone       String?
  customRates Rate[]
  createdAt   DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt   DateTime  @updatedAt() @db.Timestamptz(3)
  sales       Sale[]
  payments    Payment[]

  @@map("customers")
}

model Rate {
  id         Int       @id @default(autoincrement())
  size       Int
  rate       Decimal   @db.Money
  customer   Customer? @relation(fields: [customerId], references: [id])
  customerId Int? // Nullable to support global default rates
  createdAt  DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt  DateTime  @updatedAt() @db.Timestamptz(3)

  @@map("rates")
}

model Payment {
  id          Int      @id @default(autoincrement())
  amount      Decimal  @db.Money
  customer    Customer @relation(fields: [customerId], references: [id])
  customerId  Int
  paymentDate DateTime @db.Timestamptz(3)
  createdAt   DateTime @default(now()) @db.Timestamptz(3)
  updatedAt   DateTime @updatedAt() @db.Timestamptz(3)
  note        String?

  @@map("payments")
}
